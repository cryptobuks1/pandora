// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type PublicKey struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{1}
}
func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (dst *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(dst, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type Account struct {
	Meta                 *AccountMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	PublicKey            string       `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{2}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetMeta() *AccountMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Account) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type AccountMeta struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,2,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountMeta) Reset()         { *m = AccountMeta{} }
func (m *AccountMeta) String() string { return proto.CompactTextString(m) }
func (*AccountMeta) ProtoMessage()    {}
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{3}
}
func (m *AccountMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountMeta.Unmarshal(m, b)
}
func (m *AccountMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountMeta.Marshal(b, m, deterministic)
}
func (dst *AccountMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountMeta.Merge(dst, src)
}
func (m *AccountMeta) XXX_Size() int {
	return xxx_messageInfo_AccountMeta.Size(m)
}
func (m *AccountMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountMeta.DiscardUnknown(m)
}

var xxx_messageInfo_AccountMeta proto.InternalMessageInfo

func (m *AccountMeta) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AccountMeta) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

type Candidate struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,2,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{4}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Candidate) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

type CertCandidate struct {
	PublicKey            *PublicKey `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	Title                string     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description          string     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CertCandidate) Reset()         { *m = CertCandidate{} }
func (m *CertCandidate) String() string { return proto.CompactTextString(m) }
func (*CertCandidate) ProtoMessage()    {}
func (*CertCandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{5}
}
func (m *CertCandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertCandidate.Unmarshal(m, b)
}
func (m *CertCandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertCandidate.Marshal(b, m, deterministic)
}
func (dst *CertCandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertCandidate.Merge(dst, src)
}
func (m *CertCandidate) XXX_Size() int {
	return xxx_messageInfo_CertCandidate.Size(m)
}
func (m *CertCandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_CertCandidate.DiscardUnknown(m)
}

var xxx_messageInfo_CertCandidate proto.InternalMessageInfo

func (m *CertCandidate) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CertCandidate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CertCandidate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CertIssuer struct {
	Meta                 *IssuerMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Signature            string      `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CertIssuer) Reset()         { *m = CertIssuer{} }
func (m *CertIssuer) String() string { return proto.CompactTextString(m) }
func (*CertIssuer) ProtoMessage()    {}
func (*CertIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{6}
}
func (m *CertIssuer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertIssuer.Unmarshal(m, b)
}
func (m *CertIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertIssuer.Marshal(b, m, deterministic)
}
func (dst *CertIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertIssuer.Merge(dst, src)
}
func (m *CertIssuer) XXX_Size() int {
	return xxx_messageInfo_CertIssuer.Size(m)
}
func (m *CertIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_CertIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_CertIssuer proto.InternalMessageInfo

func (m *CertIssuer) GetMeta() *IssuerMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CertIssuer) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type CertRecipient struct {
	Meta                 *RecipientMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Signature            string         `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CertRecipient) Reset()         { *m = CertRecipient{} }
func (m *CertRecipient) String() string { return proto.CompactTextString(m) }
func (*CertRecipient) ProtoMessage()    {}
func (*CertRecipient) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{7}
}
func (m *CertRecipient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertRecipient.Unmarshal(m, b)
}
func (m *CertRecipient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertRecipient.Marshal(b, m, deterministic)
}
func (dst *CertRecipient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertRecipient.Merge(dst, src)
}
func (m *CertRecipient) XXX_Size() int {
	return xxx_messageInfo_CertRecipient.Size(m)
}
func (m *CertRecipient) XXX_DiscardUnknown() {
	xxx_messageInfo_CertRecipient.DiscardUnknown(m)
}

var xxx_messageInfo_CertRecipient proto.InternalMessageInfo

func (m *CertRecipient) GetMeta() *RecipientMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CertRecipient) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type IssuerMeta struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuerMeta) Reset()         { *m = IssuerMeta{} }
func (m *IssuerMeta) String() string { return proto.CompactTextString(m) }
func (*IssuerMeta) ProtoMessage()    {}
func (*IssuerMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{8}
}
func (m *IssuerMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerMeta.Unmarshal(m, b)
}
func (m *IssuerMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerMeta.Marshal(b, m, deterministic)
}
func (dst *IssuerMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerMeta.Merge(dst, src)
}
func (m *IssuerMeta) XXX_Size() int {
	return xxx_messageInfo_IssuerMeta.Size(m)
}
func (m *IssuerMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerMeta.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerMeta proto.InternalMessageInfo

func (m *IssuerMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RecipientMeta struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecipientMeta) Reset()         { *m = RecipientMeta{} }
func (m *RecipientMeta) String() string { return proto.CompactTextString(m) }
func (*RecipientMeta) ProtoMessage()    {}
func (*RecipientMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{9}
}
func (m *RecipientMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecipientMeta.Unmarshal(m, b)
}
func (m *RecipientMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecipientMeta.Marshal(b, m, deterministic)
}
func (dst *RecipientMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecipientMeta.Merge(dst, src)
}
func (m *RecipientMeta) XXX_Size() int {
	return xxx_messageInfo_RecipientMeta.Size(m)
}
func (m *RecipientMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_RecipientMeta.DiscardUnknown(m)
}

var xxx_messageInfo_RecipientMeta proto.InternalMessageInfo

func (m *RecipientMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CertMeta struct {
	Title                string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertMeta) Reset()         { *m = CertMeta{} }
func (m *CertMeta) String() string { return proto.CompactTextString(m) }
func (*CertMeta) ProtoMessage()    {}
func (*CertMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{10}
}
func (m *CertMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertMeta.Unmarshal(m, b)
}
func (m *CertMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertMeta.Marshal(b, m, deterministic)
}
func (dst *CertMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertMeta.Merge(dst, src)
}
func (m *CertMeta) XXX_Size() int {
	return xxx_messageInfo_CertMeta.Size(m)
}
func (m *CertMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_CertMeta.DiscardUnknown(m)
}

var xxx_messageInfo_CertMeta proto.InternalMessageInfo

func (m *CertMeta) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CertMeta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CertMeta) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Cert struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Meta                 *CertMeta      `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	Issuer               *CertIssuer    `protobuf:"bytes,3,opt,name=issuer" json:"issuer,omitempty"`
	Recipient            *CertRecipient `protobuf:"bytes,4,opt,name=recipient" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Cert) Reset()         { *m = Cert{} }
func (m *Cert) String() string { return proto.CompactTextString(m) }
func (*Cert) ProtoMessage()    {}
func (*Cert) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{11}
}
func (m *Cert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cert.Unmarshal(m, b)
}
func (m *Cert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cert.Marshal(b, m, deterministic)
}
func (dst *Cert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cert.Merge(dst, src)
}
func (m *Cert) XXX_Size() int {
	return xxx_messageInfo_Cert.Size(m)
}
func (m *Cert) XXX_DiscardUnknown() {
	xxx_messageInfo_Cert.DiscardUnknown(m)
}

var xxx_messageInfo_Cert proto.InternalMessageInfo

func (m *Cert) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cert) GetMeta() *CertMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Cert) GetIssuer() *CertIssuer {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *Cert) GetRecipient() *CertRecipient {
	if m != nil {
		return m.Recipient
	}
	return nil
}

type CertBlock struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertBlock) Reset()         { *m = CertBlock{} }
func (m *CertBlock) String() string { return proto.CompactTextString(m) }
func (*CertBlock) ProtoMessage()    {}
func (*CertBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{12}
}
func (m *CertBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertBlock.Unmarshal(m, b)
}
func (m *CertBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertBlock.Marshal(b, m, deterministic)
}
func (dst *CertBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertBlock.Merge(dst, src)
}
func (m *CertBlock) XXX_Size() int {
	return xxx_messageInfo_CertBlock.Size(m)
}
func (m *CertBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_CertBlock.DiscardUnknown(m)
}

var xxx_messageInfo_CertBlock proto.InternalMessageInfo

func (m *CertBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type CertChain struct {
	CertBlock            []*CertBlock `protobuf:"bytes,1,rep,name=cert_block,json=certBlock" json:"cert_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CertChain) Reset()         { *m = CertChain{} }
func (m *CertChain) String() string { return proto.CompactTextString(m) }
func (*CertChain) ProtoMessage()    {}
func (*CertChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{13}
}
func (m *CertChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertChain.Unmarshal(m, b)
}
func (m *CertChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertChain.Marshal(b, m, deterministic)
}
func (dst *CertChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertChain.Merge(dst, src)
}
func (m *CertChain) XXX_Size() int {
	return xxx_messageInfo_CertChain.Size(m)
}
func (m *CertChain) XXX_DiscardUnknown() {
	xxx_messageInfo_CertChain.DiscardUnknown(m)
}

var xxx_messageInfo_CertChain proto.InternalMessageInfo

func (m *CertChain) GetCertBlock() []*CertBlock {
	if m != nil {
		return m.CertBlock
	}
	return nil
}

// todo public_key -> publicKey
type MasterBlock struct {
	Block                *Block     `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	PublicKey            *PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	CertChain            *CertChain `protobuf:"bytes,3,opt,name=cert_chain,json=certChain" json:"cert_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MasterBlock) Reset()         { *m = MasterBlock{} }
func (m *MasterBlock) String() string { return proto.CompactTextString(m) }
func (*MasterBlock) ProtoMessage()    {}
func (*MasterBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{14}
}
func (m *MasterBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterBlock.Unmarshal(m, b)
}
func (m *MasterBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterBlock.Marshal(b, m, deterministic)
}
func (dst *MasterBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterBlock.Merge(dst, src)
}
func (m *MasterBlock) XXX_Size() int {
	return xxx_messageInfo_MasterBlock.Size(m)
}
func (m *MasterBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterBlock.DiscardUnknown(m)
}

var xxx_messageInfo_MasterBlock proto.InternalMessageInfo

func (m *MasterBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *MasterBlock) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *MasterBlock) GetCertChain() *CertChain {
	if m != nil {
		return m.CertChain
	}
	return nil
}

type MasterChain struct {
	MasterBlock          []*MasterBlock `protobuf:"bytes,1,rep,name=master_block,json=masterBlock" json:"master_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MasterChain) Reset()         { *m = MasterChain{} }
func (m *MasterChain) String() string { return proto.CompactTextString(m) }
func (*MasterChain) ProtoMessage()    {}
func (*MasterChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{15}
}
func (m *MasterChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterChain.Unmarshal(m, b)
}
func (m *MasterChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterChain.Marshal(b, m, deterministic)
}
func (dst *MasterChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterChain.Merge(dst, src)
}
func (m *MasterChain) XXX_Size() int {
	return xxx_messageInfo_MasterChain.Size(m)
}
func (m *MasterChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterChain.DiscardUnknown(m)
}

var xxx_messageInfo_MasterChain proto.InternalMessageInfo

func (m *MasterChain) GetMasterBlock() []*MasterBlock {
	if m != nil {
		return m.MasterBlock
	}
	return nil
}

type Block struct {
	Index                int64    `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	PrevHash             string   `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash" json:"prev_hash,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{16}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type NetOpts struct {
	Broker               *BrokerOpts     `protobuf:"bytes,1,opt,name=broker" json:"broker,omitempty"`
	Membership           *MembershipOpts `protobuf:"bytes,2,opt,name=membership" json:"membership,omitempty"`
	Master               *MasterOpts     `protobuf:"bytes,3,opt,name=master" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NetOpts) Reset()         { *m = NetOpts{} }
func (m *NetOpts) String() string { return proto.CompactTextString(m) }
func (*NetOpts) ProtoMessage()    {}
func (*NetOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{17}
}
func (m *NetOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetOpts.Unmarshal(m, b)
}
func (m *NetOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetOpts.Marshal(b, m, deterministic)
}
func (dst *NetOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetOpts.Merge(dst, src)
}
func (m *NetOpts) XXX_Size() int {
	return xxx_messageInfo_NetOpts.Size(m)
}
func (m *NetOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_NetOpts.DiscardUnknown(m)
}

var xxx_messageInfo_NetOpts proto.InternalMessageInfo

func (m *NetOpts) GetBroker() *BrokerOpts {
	if m != nil {
		return m.Broker
	}
	return nil
}

func (m *NetOpts) GetMembership() *MembershipOpts {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *NetOpts) GetMaster() *MasterOpts {
	if m != nil {
		return m.Master
	}
	return nil
}

type BrokerOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerOpts) Reset()         { *m = BrokerOpts{} }
func (m *BrokerOpts) String() string { return proto.CompactTextString(m) }
func (*BrokerOpts) ProtoMessage()    {}
func (*BrokerOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{18}
}
func (m *BrokerOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerOpts.Unmarshal(m, b)
}
func (m *BrokerOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerOpts.Marshal(b, m, deterministic)
}
func (dst *BrokerOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerOpts.Merge(dst, src)
}
func (m *BrokerOpts) XXX_Size() int {
	return xxx_messageInfo_BrokerOpts.Size(m)
}
func (m *BrokerOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerOpts.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerOpts proto.InternalMessageInfo

func (m *BrokerOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *BrokerOpts) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *BrokerOpts) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type MembershipOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MembershipOpts) Reset()         { *m = MembershipOpts{} }
func (m *MembershipOpts) String() string { return proto.CompactTextString(m) }
func (*MembershipOpts) ProtoMessage()    {}
func (*MembershipOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{19}
}
func (m *MembershipOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipOpts.Unmarshal(m, b)
}
func (m *MembershipOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipOpts.Marshal(b, m, deterministic)
}
func (dst *MembershipOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipOpts.Merge(dst, src)
}
func (m *MembershipOpts) XXX_Size() int {
	return xxx_messageInfo_MembershipOpts.Size(m)
}
func (m *MembershipOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipOpts.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipOpts proto.InternalMessageInfo

func (m *MembershipOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type MasterOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterOpts) Reset()         { *m = MasterOpts{} }
func (m *MasterOpts) String() string { return proto.CompactTextString(m) }
func (*MasterOpts) ProtoMessage()    {}
func (*MasterOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_495008100a119d7c, []int{20}
}
func (m *MasterOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterOpts.Unmarshal(m, b)
}
func (m *MasterOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterOpts.Marshal(b, m, deterministic)
}
func (dst *MasterOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterOpts.Merge(dst, src)
}
func (m *MasterOpts) XXX_Size() int {
	return xxx_messageInfo_MasterOpts.Size(m)
}
func (m *MasterOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterOpts.DiscardUnknown(m)
}

var xxx_messageInfo_MasterOpts proto.InternalMessageInfo

func (m *MasterOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*PublicKey)(nil), "pb.PublicKey")
	proto.RegisterType((*Account)(nil), "pb.Account")
	proto.RegisterType((*AccountMeta)(nil), "pb.AccountMeta")
	proto.RegisterType((*Candidate)(nil), "pb.Candidate")
	proto.RegisterType((*CertCandidate)(nil), "pb.CertCandidate")
	proto.RegisterType((*CertIssuer)(nil), "pb.CertIssuer")
	proto.RegisterType((*CertRecipient)(nil), "pb.CertRecipient")
	proto.RegisterType((*IssuerMeta)(nil), "pb.IssuerMeta")
	proto.RegisterType((*RecipientMeta)(nil), "pb.RecipientMeta")
	proto.RegisterType((*CertMeta)(nil), "pb.CertMeta")
	proto.RegisterType((*Cert)(nil), "pb.Cert")
	proto.RegisterType((*CertBlock)(nil), "pb.CertBlock")
	proto.RegisterType((*CertChain)(nil), "pb.CertChain")
	proto.RegisterType((*MasterBlock)(nil), "pb.MasterBlock")
	proto.RegisterType((*MasterChain)(nil), "pb.MasterChain")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*NetOpts)(nil), "pb.NetOpts")
	proto.RegisterType((*BrokerOpts)(nil), "pb.BrokerOpts")
	proto.RegisterType((*MembershipOpts)(nil), "pb.MembershipOpts")
	proto.RegisterType((*MasterOpts)(nil), "pb.MasterOpts")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Membership service

type MembershipClient interface {
	Node(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*PublicKey, error)
	Register(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*Empty, error)
	Fetch(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Account, error)
	Issue(ctx context.Context, in *CertCandidate, opts ...grpc.CallOption) (*Empty, error)
}

type membershipClient struct {
	cc *grpc.ClientConn
}

func NewMembershipClient(cc *grpc.ClientConn) MembershipClient {
	return &membershipClient{cc}
}

func (c *membershipClient) Node(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*PublicKey, error) {
	out := new(PublicKey)
	err := grpc.Invoke(ctx, "/pb.Membership/Node", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *membershipClient) Register(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/pb.Membership/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *membershipClient) Fetch(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/pb.Membership/Fetch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *membershipClient) Issue(ctx context.Context, in *CertCandidate, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/pb.Membership/Issue", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Membership service

type MembershipServer interface {
	Node(context.Context, *Candidate) (*PublicKey, error)
	Register(context.Context, *Candidate) (*Empty, error)
	Fetch(context.Context, *PublicKey) (*Account, error)
	Issue(context.Context, *CertCandidate) (*Empty, error)
}

func RegisterMembershipServer(s *grpc.Server, srv MembershipServer) {
	s.RegisterService(&_Membership_serviceDesc, srv)
}

func _Membership_Node_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Candidate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).Node(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Membership/Node",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).Node(ctx, req.(*Candidate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Membership_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Candidate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Membership/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).Register(ctx, req.(*Candidate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Membership_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Membership/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).Fetch(ctx, req.(*PublicKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Membership_Issue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CertCandidate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).Issue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Membership/Issue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).Issue(ctx, req.(*CertCandidate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Membership_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Membership",
	HandlerType: (*MembershipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Node",
			Handler:    _Membership_Node_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Membership_Register_Handler,
		},
		{
			MethodName: "Fetch",
			Handler:    _Membership_Fetch_Handler,
		},
		{
			MethodName: "Issue",
			Handler:    _Membership_Issue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// Client API for Master service

type MasterClient interface {
	CertCandidate(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error)
	Node(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*MasterChain, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) CertCandidate(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/pb.Master/CertCandidate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) Node(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*MasterChain, error) {
	out := new(MasterChain)
	err := grpc.Invoke(ctx, "/pb.Master/Node", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Master service

type MasterServer interface {
	CertCandidate(context.Context, *Cert) (*Empty, error)
	Node(context.Context, *PublicKey) (*MasterChain, error)
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_CertCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).CertCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Master/CertCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).CertCandidate(ctx, req.(*Cert))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_Node_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Node(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Master/Node",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Node(ctx, req.(*PublicKey))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CertCandidate",
			Handler:    _Master_CertCandidate_Handler,
		},
		{
			MethodName: "Node",
			Handler:    _Master_Node_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// Client API for Discovery service

type DiscoveryClient interface {
	Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetOpts, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetOpts, error) {
	out := new(NetOpts)
	err := grpc.Invoke(ctx, "/pb.Discovery/Network", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Discovery service

type DiscoveryServer interface {
	Network(context.Context, *Empty) (*NetOpts, error)
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_Network_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).Network(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Discovery/Network",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).Network(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Network",
			Handler:    _Discovery_Network_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_pb_495008100a119d7c) }

var fileDescriptor_pb_495008100a119d7c = []byte{
	// 769 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4b, 0x6f, 0xd3, 0x4a,
	0x14, 0xce, 0xb3, 0x8d, 0x4f, 0xda, 0x5e, 0xdd, 0x51, 0x17, 0x55, 0xef, 0xbd, 0xba, 0xd1, 0x54,
	0x2d, 0x15, 0xaa, 0x0a, 0x0a, 0x2b, 0x36, 0x88, 0xb6, 0x80, 0x40, 0x28, 0x01, 0x59, 0x2c, 0x10,
	0x9b, 0xe0, 0xc7, 0xa1, 0x19, 0x25, 0xb6, 0x47, 0xe3, 0x71, 0x4b, 0xfe, 0x02, 0x12, 0x0b, 0xfe,
	0x07, 0x3f, 0x12, 0xcd, 0xcb, 0x8f, 0xb4, 0x2a, 0x15, 0xbb, 0x39, 0x0f, 0x7f, 0xe7, 0x3b, 0x9f,
	0xbf, 0xb1, 0x61, 0xc0, 0xc3, 0x53, 0x2e, 0x32, 0x99, 0x91, 0x0e, 0x0f, 0xe9, 0x26, 0xf4, 0x5f,
	0x26, 0x5c, 0xae, 0xe8, 0x43, 0xf0, 0xde, 0x17, 0xe1, 0x92, 0x45, 0x6f, 0x71, 0x45, 0xfe, 0x03,
	0xe0, 0x3a, 0x98, 0x2d, 0x70, 0xb5, 0xd7, 0x1e, 0xb5, 0x8f, 0x3d, 0xdf, 0xe3, 0xae, 0x4c, 0x27,
	0xb0, 0x79, 0x16, 0x45, 0x59, 0x91, 0x4a, 0x72, 0x00, 0xbd, 0x04, 0x65, 0xa0, 0x7b, 0x86, 0xe3,
	0xbf, 0x4e, 0x79, 0x78, 0x6a, 0x4b, 0x13, 0x94, 0x81, 0xaf, 0x8b, 0x6b, 0x70, 0x9d, 0x75, 0xb8,
	0xe7, 0x30, 0xac, 0x3d, 0x43, 0x76, 0xa1, 0x8f, 0x49, 0xc0, 0x96, 0x76, 0xae, 0x09, 0xc8, 0x3f,
	0xe0, 0x7d, 0x29, 0x96, 0xcb, 0x59, 0x1a, 0x24, 0x68, 0x21, 0x06, 0x2a, 0x31, 0x0d, 0x12, 0xa4,
	0xcf, 0xc0, 0xbb, 0x08, 0xd2, 0x98, 0xc5, 0x81, 0xc4, 0x3f, 0x79, 0xbe, 0x80, 0xed, 0x0b, 0x14,
	0xb2, 0xc2, 0x38, 0xb9, 0x21, 0xc0, 0x70, 0xbc, 0xad, 0x96, 0x2b, 0x35, 0xaa, 0x2d, 0xa0, 0x26,
	0x4a, 0x26, 0x97, 0x0e, 0xd7, 0x04, 0x64, 0x04, 0xc3, 0x18, 0xf3, 0x48, 0x30, 0x2e, 0x59, 0x96,
	0xee, 0x75, 0x75, 0xad, 0x9e, 0xa2, 0x53, 0x00, 0x35, 0xf6, 0x4d, 0x9e, 0x17, 0x28, 0x08, 0x6d,
	0x48, 0xb9, 0xa3, 0xa6, 0x99, 0x4a, 0x4d, 0xc9, 0x7f, 0xc1, 0xcb, 0xd9, 0x65, 0x1a, 0xc8, 0x42,
	0xb8, 0x69, 0x55, 0x82, 0x7e, 0x30, 0x6b, 0xf8, 0x18, 0x31, 0xce, 0x30, 0x95, 0xe4, 0xb0, 0x01,
	0xf9, 0xb7, 0x82, 0x2c, 0x8b, 0xf7, 0x46, 0x1d, 0x01, 0x54, 0x3c, 0x08, 0x81, 0x9e, 0x96, 0xd0,
	0x88, 0xab, 0xcf, 0xf4, 0x00, 0xb6, 0x1b, 0xb0, 0xb7, 0x36, 0x7d, 0x86, 0x81, 0x22, 0xe7, 0x5e,
	0xb1, 0x11, 0xac, 0x7d, 0x87, 0x60, 0x9d, 0x1b, 0x82, 0x29, 0xa2, 0x92, 0x25, 0x98, 0xcb, 0x20,
	0xe1, 0x5a, 0xd0, 0xae, 0x5f, 0x25, 0xe8, 0x8f, 0x36, 0xf4, 0xd4, 0x08, 0xb2, 0x03, 0x1d, 0x16,
	0x5b, 0xec, 0x0e, 0x8b, 0xc9, 0xc8, 0xca, 0xd0, 0xd1, 0x32, 0x6c, 0x29, 0x19, 0x1c, 0x15, 0xab,
	0xc0, 0x11, 0x6c, 0x30, 0xbd, 0xa3, 0x46, 0xb5, 0xea, 0x57, 0xef, 0xc6, 0xb7, 0x55, 0xf2, 0x08,
	0x3c, 0xe1, 0x36, 0xdd, 0xeb, 0x55, 0xaa, 0x36, 0x64, 0xf7, 0xab, 0x1e, 0x7a, 0x02, 0x9e, 0xaa,
	0x9d, 0x2f, 0xb3, 0x68, 0x41, 0xfe, 0x87, 0x7e, 0xa8, 0x0e, 0xf6, 0x7d, 0x78, 0xea, 0x49, 0x5d,
	0xf1, 0x4d, 0x9e, 0x3e, 0x35, 0xdd, 0x17, 0xf3, 0x80, 0xa5, 0xca, 0x83, 0x11, 0x0a, 0x39, 0x73,
	0x8f, 0x74, 0x9d, 0x07, 0x4b, 0x40, 0xdf, 0x8b, 0xdc, 0x91, 0x7e, 0x6b, 0xc3, 0x70, 0x12, 0xe4,
	0x12, 0xc5, 0xfd, 0x66, 0xad, 0x59, 0xbc, 0xf3, 0x1b, 0x8b, 0x3b, 0x32, 0x91, 0xa2, 0x66, 0x45,
	0x2a, 0xc9, 0x68, 0xbe, 0x86, 0x8c, 0x3e, 0xd2, 0x33, 0xc7, 0xc5, 0x6c, 0x32, 0x86, 0xad, 0x44,
	0x87, 0x8d, 0x5d, 0xf4, 0xc7, 0xa2, 0x46, 0xd9, 0x1f, 0x26, 0x55, 0x40, 0x97, 0xd0, 0x37, 0x8b,
	0xec, 0x42, 0x9f, 0xa5, 0x31, 0x7e, 0xd5, 0x8b, 0x74, 0x7d, 0x13, 0x28, 0x87, 0xcd, 0x83, 0x7c,
	0x6e, 0x4d, 0xa2, 0xcf, 0xea, 0x8a, 0x73, 0x81, 0x57, 0x33, 0x5d, 0x30, 0xd7, 0x6d, 0xa0, 0x12,
	0xaf, 0x55, 0xb1, 0x61, 0x9d, 0xde, 0xba, 0x75, 0xbe, 0xb7, 0x61, 0x73, 0x8a, 0xf2, 0x1d, 0x97,
	0xb9, 0xf2, 0x42, 0x28, 0xb2, 0x05, 0x8a, 0xfa, 0x4d, 0x3c, 0xd7, 0x19, 0x55, 0xf7, 0x6d, 0x95,
	0x8c, 0x01, 0x12, 0x4c, 0x42, 0x14, 0xf9, 0x9c, 0x71, 0x2b, 0x20, 0xd1, 0x3b, 0x95, 0x59, 0xdd,
	0x5f, 0xeb, 0x52, 0xd8, 0x66, 0xc9, 0xba, 0xcf, 0x8c, 0x06, 0x06, 0xdb, 0x54, 0xe9, 0x47, 0x80,
	0x6a, 0x22, 0xd9, 0x87, 0x01, 0xa6, 0x31, 0xcf, 0x58, 0x2a, 0xad, 0xab, 0xcb, 0x58, 0x09, 0x51,
	0xe4, 0x28, 0x9c, 0x10, 0xea, 0xac, 0xfa, 0x79, 0x90, 0xe7, 0xd7, 0x99, 0x88, 0x4b, 0x1d, 0x6c,
	0x4c, 0x4f, 0x60, 0xa7, 0xc9, 0xef, 0x2e, 0x74, 0x7a, 0x0c, 0x50, 0xb1, 0xbb, 0xab, 0x73, 0xfc,
	0xb3, 0x0d, 0x30, 0xa9, 0x2f, 0xda, 0x9b, 0x66, 0x31, 0x12, 0xe3, 0x11, 0xf7, 0x5d, 0xdd, 0x6f,
	0x1a, 0x8c, 0xb6, 0xc8, 0x11, 0x0c, 0x7c, 0xbc, 0x64, 0x6a, 0xc4, 0x7a, 0xaf, 0xb6, 0xac, 0xf9,
	0x39, 0xb5, 0xc8, 0x21, 0xf4, 0x5f, 0xa1, 0x8c, 0xe6, 0xa4, 0x89, 0xb0, 0x3f, 0xac, 0xfd, 0x71,
	0x68, 0x8b, 0x3c, 0x80, 0xbe, 0xbe, 0xb1, 0xa4, 0xbc, 0x95, 0xb7, 0xe3, 0x8d, 0x3f, 0xc1, 0x86,
	0x59, 0x8c, 0x1c, 0xad, 0x7f, 0xfb, 0x07, 0xee, 0xd1, 0x26, 0x83, 0xe3, 0xfa, 0x46, 0x15, 0x81,
	0x9a, 0x8b, 0x8d, 0xf7, 0x5b, 0xe3, 0xc7, 0xe0, 0xbd, 0x60, 0x79, 0x94, 0x5d, 0xa1, 0x58, 0x91,
	0x03, 0x6d, 0xac, 0xeb, 0x4c, 0x2c, 0x48, 0x05, 0x67, 0x68, 0x5b, 0xc3, 0xd1, 0x56, 0xb8, 0xa1,
	0x7f, 0xc8, 0x4f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x14, 0x01, 0x50, 0xfa, 0x9c, 0x07, 0x00,
	0x00,
}
