// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CertBlock struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertBlock) Reset()         { *m = CertBlock{} }
func (m *CertBlock) String() string { return proto.CompactTextString(m) }
func (*CertBlock) ProtoMessage()    {}
func (*CertBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{0}
}
func (m *CertBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertBlock.Unmarshal(m, b)
}
func (m *CertBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertBlock.Marshal(b, m, deterministic)
}
func (dst *CertBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertBlock.Merge(dst, src)
}
func (m *CertBlock) XXX_Size() int {
	return xxx_messageInfo_CertBlock.Size(m)
}
func (m *CertBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_CertBlock.DiscardUnknown(m)
}

var xxx_messageInfo_CertBlock proto.InternalMessageInfo

func (m *CertBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type MasterBlock struct {
	Block                *Block     `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
	CertChain            *CertChain `protobuf:"bytes,4,opt,name=cert_chain,json=certChain" json:"cert_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MasterBlock) Reset()         { *m = MasterBlock{} }
func (m *MasterBlock) String() string { return proto.CompactTextString(m) }
func (*MasterBlock) ProtoMessage()    {}
func (*MasterBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{1}
}
func (m *MasterBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterBlock.Unmarshal(m, b)
}
func (m *MasterBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterBlock.Marshal(b, m, deterministic)
}
func (dst *MasterBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterBlock.Merge(dst, src)
}
func (m *MasterBlock) XXX_Size() int {
	return xxx_messageInfo_MasterBlock.Size(m)
}
func (m *MasterBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterBlock.DiscardUnknown(m)
}

var xxx_messageInfo_MasterBlock proto.InternalMessageInfo

func (m *MasterBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *MasterBlock) GetCertChain() *CertChain {
	if m != nil {
		return m.CertChain
	}
	return nil
}

type Block struct {
	Index                int64      `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Hash                 string     `protobuf:"bytes,3,opt,name=hash" json:"hash,omitempty"`
	PrevHash             string     `protobuf:"bytes,4,opt,name=prev_hash,json=prevHash" json:"prev_hash,omitempty"`
	Timestamp            int64      `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Tx                   string     `protobuf:"bytes,6,opt,name=tx" json:"tx,omitempty"`
	PublicKey            *PublicKey `protobuf:"bytes,7,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{2}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetTx() string {
	if m != nil {
		return m.Tx
	}
	return ""
}

func (m *Block) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type CertChain struct {
	CertChain            []*CertBlock `protobuf:"bytes,1,rep,name=cert_chain,json=certChain" json:"cert_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CertChain) Reset()         { *m = CertChain{} }
func (m *CertChain) String() string { return proto.CompactTextString(m) }
func (*CertChain) ProtoMessage()    {}
func (*CertChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{3}
}
func (m *CertChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertChain.Unmarshal(m, b)
}
func (m *CertChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertChain.Marshal(b, m, deterministic)
}
func (dst *CertChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertChain.Merge(dst, src)
}
func (m *CertChain) XXX_Size() int {
	return xxx_messageInfo_CertChain.Size(m)
}
func (m *CertChain) XXX_DiscardUnknown() {
	xxx_messageInfo_CertChain.DiscardUnknown(m)
}

var xxx_messageInfo_CertChain proto.InternalMessageInfo

func (m *CertChain) GetCertChain() []*CertBlock {
	if m != nil {
		return m.CertChain
	}
	return nil
}

type MasterChain struct {
	MasterChain          []*MasterBlock `protobuf:"bytes,1,rep,name=master_chain,json=masterChain" json:"master_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MasterChain) Reset()         { *m = MasterChain{} }
func (m *MasterChain) String() string { return proto.CompactTextString(m) }
func (*MasterChain) ProtoMessage()    {}
func (*MasterChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{4}
}
func (m *MasterChain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterChain.Unmarshal(m, b)
}
func (m *MasterChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterChain.Marshal(b, m, deterministic)
}
func (dst *MasterChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterChain.Merge(dst, src)
}
func (m *MasterChain) XXX_Size() int {
	return xxx_messageInfo_MasterChain.Size(m)
}
func (m *MasterChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterChain.DiscardUnknown(m)
}

var xxx_messageInfo_MasterChain proto.InternalMessageInfo

func (m *MasterChain) GetMasterChain() []*MasterBlock {
	if m != nil {
		return m.MasterChain
	}
	return nil
}

type Cert struct {
	Id                   string       `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Meta                 *CertMeta    `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	Issuer               *Participant `protobuf:"bytes,4,opt,name=issuer" json:"issuer,omitempty"`
	Recipient            *Participant `protobuf:"bytes,5,opt,name=recipient" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cert) Reset()         { *m = Cert{} }
func (m *Cert) String() string { return proto.CompactTextString(m) }
func (*Cert) ProtoMessage()    {}
func (*Cert) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{5}
}
func (m *Cert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cert.Unmarshal(m, b)
}
func (m *Cert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cert.Marshal(b, m, deterministic)
}
func (dst *Cert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cert.Merge(dst, src)
}
func (m *Cert) XXX_Size() int {
	return xxx_messageInfo_Cert.Size(m)
}
func (m *Cert) XXX_DiscardUnknown() {
	xxx_messageInfo_Cert.DiscardUnknown(m)
}

var xxx_messageInfo_Cert proto.InternalMessageInfo

func (m *Cert) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cert) GetMeta() *CertMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Cert) GetIssuer() *Participant {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *Cert) GetRecipient() *Participant {
	if m != nil {
		return m.Recipient
	}
	return nil
}

type Participant struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	PublicKey            *PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	Signature            string     `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Participant) Reset()         { *m = Participant{} }
func (m *Participant) String() string { return proto.CompactTextString(m) }
func (*Participant) ProtoMessage()    {}
func (*Participant) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{6}
}
func (m *Participant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Participant.Unmarshal(m, b)
}
func (m *Participant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Participant.Marshal(b, m, deterministic)
}
func (dst *Participant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Participant.Merge(dst, src)
}
func (m *Participant) XXX_Size() int {
	return xxx_messageInfo_Participant.Size(m)
}
func (m *Participant) XXX_DiscardUnknown() {
	xxx_messageInfo_Participant.DiscardUnknown(m)
}

var xxx_messageInfo_Participant proto.InternalMessageInfo

func (m *Participant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Participant) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *Participant) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type CertMeta struct {
	Title                string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CertMeta) Reset()         { *m = CertMeta{} }
func (m *CertMeta) String() string { return proto.CompactTextString(m) }
func (*CertMeta) ProtoMessage()    {}
func (*CertMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{7}
}
func (m *CertMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertMeta.Unmarshal(m, b)
}
func (m *CertMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertMeta.Marshal(b, m, deterministic)
}
func (dst *CertMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertMeta.Merge(dst, src)
}
func (m *CertMeta) XXX_Size() int {
	return xxx_messageInfo_CertMeta.Size(m)
}
func (m *CertMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_CertMeta.DiscardUnknown(m)
}

var xxx_messageInfo_CertMeta proto.InternalMessageInfo

func (m *CertMeta) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CertMeta) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CertMeta) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type PublicKey struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{8}
}
func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (dst *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(dst, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{9}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type BrokerOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerOpts) Reset()         { *m = BrokerOpts{} }
func (m *BrokerOpts) String() string { return proto.CompactTextString(m) }
func (*BrokerOpts) ProtoMessage()    {}
func (*BrokerOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{10}
}
func (m *BrokerOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerOpts.Unmarshal(m, b)
}
func (m *BrokerOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerOpts.Marshal(b, m, deterministic)
}
func (dst *BrokerOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerOpts.Merge(dst, src)
}
func (m *BrokerOpts) XXX_Size() int {
	return xxx_messageInfo_BrokerOpts.Size(m)
}
func (m *BrokerOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerOpts.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerOpts proto.InternalMessageInfo

func (m *BrokerOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *BrokerOpts) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *BrokerOpts) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type MembershipOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MembershipOpts) Reset()         { *m = MembershipOpts{} }
func (m *MembershipOpts) String() string { return proto.CompactTextString(m) }
func (*MembershipOpts) ProtoMessage()    {}
func (*MembershipOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{11}
}
func (m *MembershipOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipOpts.Unmarshal(m, b)
}
func (m *MembershipOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipOpts.Marshal(b, m, deterministic)
}
func (dst *MembershipOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipOpts.Merge(dst, src)
}
func (m *MembershipOpts) XXX_Size() int {
	return xxx_messageInfo_MembershipOpts.Size(m)
}
func (m *MembershipOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipOpts.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipOpts proto.InternalMessageInfo

func (m *MembershipOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type MasterOpts struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterOpts) Reset()         { *m = MasterOpts{} }
func (m *MasterOpts) String() string { return proto.CompactTextString(m) }
func (*MasterOpts) ProtoMessage()    {}
func (*MasterOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{12}
}
func (m *MasterOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterOpts.Unmarshal(m, b)
}
func (m *MasterOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterOpts.Marshal(b, m, deterministic)
}
func (dst *MasterOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterOpts.Merge(dst, src)
}
func (m *MasterOpts) XXX_Size() int {
	return xxx_messageInfo_MasterOpts.Size(m)
}
func (m *MasterOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterOpts.DiscardUnknown(m)
}

var xxx_messageInfo_MasterOpts proto.InternalMessageInfo

func (m *MasterOpts) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type NetworkOpts struct {
	Broker               *BrokerOpts     `protobuf:"bytes,1,opt,name=broker" json:"broker,omitempty"`
	Membership           *MembershipOpts `protobuf:"bytes,2,opt,name=membership" json:"membership,omitempty"`
	Master               *MasterOpts     `protobuf:"bytes,3,opt,name=master" json:"master,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NetworkOpts) Reset()         { *m = NetworkOpts{} }
func (m *NetworkOpts) String() string { return proto.CompactTextString(m) }
func (*NetworkOpts) ProtoMessage()    {}
func (*NetworkOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{13}
}
func (m *NetworkOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkOpts.Unmarshal(m, b)
}
func (m *NetworkOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkOpts.Marshal(b, m, deterministic)
}
func (dst *NetworkOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkOpts.Merge(dst, src)
}
func (m *NetworkOpts) XXX_Size() int {
	return xxx_messageInfo_NetworkOpts.Size(m)
}
func (m *NetworkOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkOpts.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkOpts proto.InternalMessageInfo

func (m *NetworkOpts) GetBroker() *BrokerOpts {
	if m != nil {
		return m.Broker
	}
	return nil
}

func (m *NetworkOpts) GetMembership() *MembershipOpts {
	if m != nil {
		return m.Membership
	}
	return nil
}

func (m *NetworkOpts) GetMaster() *MasterOpts {
	if m != nil {
		return m.Master
	}
	return nil
}

type Member struct {
	PublicKey            *PublicKey  `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	PrivateKey           []byte      `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Meta                 *MemberMeta `protobuf:"bytes,4,opt,name=meta" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{14}
}
func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (dst *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(dst, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetPublicKey() *PublicKey {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *Member) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *Member) GetMeta() *MemberMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

type MemberMeta struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberMeta) Reset()         { *m = MemberMeta{} }
func (m *MemberMeta) String() string { return proto.CompactTextString(m) }
func (*MemberMeta) ProtoMessage()    {}
func (*MemberMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{15}
}
func (m *MemberMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberMeta.Unmarshal(m, b)
}
func (m *MemberMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberMeta.Marshal(b, m, deterministic)
}
func (dst *MemberMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberMeta.Merge(dst, src)
}
func (m *MemberMeta) XXX_Size() int {
	return xxx_messageInfo_MemberMeta.Size(m)
}
func (m *MemberMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberMeta.DiscardUnknown(m)
}

var xxx_messageInfo_MemberMeta proto.InternalMessageInfo

func (m *MemberMeta) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *MemberMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Candidate struct {
	Email                string   `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_pb_5f80c79928689cc8, []int{16}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Candidate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CertBlock)(nil), "pb.cert_block")
	proto.RegisterType((*MasterBlock)(nil), "pb.master_block")
	proto.RegisterType((*Block)(nil), "pb.block")
	proto.RegisterType((*CertChain)(nil), "pb.cert_chain")
	proto.RegisterType((*MasterChain)(nil), "pb.master_chain")
	proto.RegisterType((*Cert)(nil), "pb.cert")
	proto.RegisterType((*Participant)(nil), "pb.participant")
	proto.RegisterType((*CertMeta)(nil), "pb.cert_meta")
	proto.RegisterType((*PublicKey)(nil), "pb.public_key")
	proto.RegisterType((*Empty)(nil), "pb.empty")
	proto.RegisterType((*BrokerOpts)(nil), "pb.broker_opts")
	proto.RegisterType((*MembershipOpts)(nil), "pb.membership_opts")
	proto.RegisterType((*MasterOpts)(nil), "pb.master_opts")
	proto.RegisterType((*NetworkOpts)(nil), "pb.network_opts")
	proto.RegisterType((*Member)(nil), "pb.member")
	proto.RegisterType((*MemberMeta)(nil), "pb.member_meta")
	proto.RegisterType((*Candidate)(nil), "pb.candidate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetworkOpts, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetworkOpts, error) {
	out := new(NetworkOpts)
	err := c.cc.Invoke(ctx, "/pb.discovery/network", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Discovery service

type DiscoveryServer interface {
	Network(context.Context, *Empty) (*NetworkOpts, error)
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_Network_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).Network(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.discovery/Network",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).Network(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "network",
			Handler:    _Discovery_Network_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	ConfirmCert(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error)
	ConfirmNode(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*MasterChain, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) ConfirmCert(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.master/confirm_cert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) ConfirmNode(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*MasterChain, error) {
	out := new(MasterChain)
	err := c.cc.Invoke(ctx, "/pb.master/confirm_node", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Master service

type MasterServer interface {
	ConfirmCert(context.Context, *Cert) (*Empty, error)
	ConfirmNode(context.Context, *PublicKey) (*MasterChain, error)
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_ConfirmCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).ConfirmCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.master/ConfirmCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).ConfirmCert(ctx, req.(*Cert))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_ConfirmNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).ConfirmNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.master/ConfirmNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).ConfirmNode(ctx, req.(*PublicKey))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "confirm_cert",
			Handler:    _Master_ConfirmCert_Handler,
		},
		{
			MethodName: "confirm_node",
			Handler:    _Master_ConfirmNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// MembershipClient is the client API for Membership service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MembershipClient interface {
	ConfirmMember(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*PublicKey, error)
	FetchMember(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Member, error)
	SignCert(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error)
}

type membershipClient struct {
	cc *grpc.ClientConn
}

func NewMembershipClient(cc *grpc.ClientConn) MembershipClient {
	return &membershipClient{cc}
}

func (c *membershipClient) ConfirmMember(ctx context.Context, in *Candidate, opts ...grpc.CallOption) (*PublicKey, error) {
	out := new(PublicKey)
	err := c.cc.Invoke(ctx, "/pb.membership/confirm_member", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *membershipClient) FetchMember(ctx context.Context, in *PublicKey, opts ...grpc.CallOption) (*Member, error) {
	out := new(Member)
	err := c.cc.Invoke(ctx, "/pb.membership/fetch_member", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *membershipClient) SignCert(ctx context.Context, in *Cert, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/pb.membership/sign_cert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Membership service

type MembershipServer interface {
	ConfirmMember(context.Context, *Candidate) (*PublicKey, error)
	FetchMember(context.Context, *PublicKey) (*Member, error)
	SignCert(context.Context, *Cert) (*Empty, error)
}

func RegisterMembershipServer(s *grpc.Server, srv MembershipServer) {
	s.RegisterService(&_Membership_serviceDesc, srv)
}

func _Membership_ConfirmMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Candidate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).ConfirmMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.membership/ConfirmMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).ConfirmMember(ctx, req.(*Candidate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Membership_FetchMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublicKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).FetchMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.membership/FetchMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).FetchMember(ctx, req.(*PublicKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Membership_SignCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServer).SignCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.membership/SignCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServer).SignCert(ctx, req.(*Cert))
	}
	return interceptor(ctx, in, info, handler)
}

var _Membership_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.membership",
	HandlerType: (*MembershipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "confirm_member",
			Handler:    _Membership_ConfirmMember_Handler,
		},
		{
			MethodName: "fetch_member",
			Handler:    _Membership_FetchMember_Handler,
		},
		{
			MethodName: "sign_cert",
			Handler:    _Membership_SignCert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_pb_5f80c79928689cc8) }

var fileDescriptor_pb_5f80c79928689cc8 = []byte{
	// 711 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x8d, 0x9d, 0x47, 0xe3, 0xeb, 0xd0, 0xa2, 0x81, 0x85, 0x15, 0x40, 0x0d, 0x83, 0x50, 0x83,
	0xa0, 0x95, 0x48, 0x55, 0xb1, 0x60, 0xd9, 0x0d, 0x12, 0x3b, 0xef, 0xd8, 0x10, 0x8d, 0xed, 0x29,
	0x19, 0x25, 0x1e, 0x8f, 0xc6, 0x93, 0xb6, 0x59, 0xf0, 0x11, 0x5d, 0xf0, 0x15, 0xfc, 0x24, 0x9a,
	0x87, 0xe3, 0x49, 0x84, 0x48, 0xd9, 0xdd, 0xe7, 0xf1, 0x7d, 0x9c, 0xb9, 0x86, 0xa1, 0xc8, 0x2e,
	0x84, 0xac, 0x54, 0x85, 0x42, 0x91, 0xe1, 0x73, 0x80, 0x9c, 0x4a, 0x35, 0xcf, 0x56, 0x55, 0xbe,
	0x44, 0xa7, 0xd0, 0x37, 0x42, 0x12, 0x4c, 0x82, 0x69, 0x3c, 0x8b, 0x2e, 0x44, 0x76, 0x61, 0x0c,
	0xa9, 0xb5, 0xe3, 0xef, 0x30, 0x2a, 0x49, 0xad, 0xa8, 0x7c, 0x64, 0x02, 0x6a, 0xf0, 0xf3, 0x05,
	0x61, 0x3c, 0xe9, 0x99, 0xa8, 0x63, 0x1d, 0xd5, 0x5a, 0xd3, 0x48, 0xcb, 0xd7, 0x5a, 0xc4, 0xbf,
	0x03, 0x07, 0x88, 0x9e, 0x43, 0x9f, 0xf1, 0x82, 0xde, 0x27, 0xe1, 0x24, 0x98, 0x76, 0x53, 0xab,
	0x20, 0x04, 0xbd, 0x05, 0xa9, 0x17, 0x49, 0x77, 0x12, 0x4c, 0xa3, 0xd4, 0xc8, 0xe8, 0x05, 0x44,
	0x42, 0xd2, 0xdb, 0xb9, 0x71, 0xf4, 0x8c, 0x63, 0xa8, 0x0d, 0x5f, 0xb4, 0xf3, 0x25, 0x44, 0x8a,
	0x95, 0xb4, 0x56, 0xa4, 0x14, 0x49, 0xdf, 0x40, 0xb5, 0x06, 0x74, 0x0c, 0xa1, 0xba, 0x4f, 0x06,
	0x26, 0x27, 0x54, 0xf7, 0xba, 0x5a, 0xb1, 0xce, 0x56, 0x2c, 0x9f, 0x2f, 0xe9, 0x26, 0x39, 0x6a,
	0xab, 0x6d, 0xad, 0x69, 0x64, 0xe5, 0xaf, 0x74, 0x83, 0x3f, 0xfb, 0xcd, 0xed, 0xb5, 0x1a, 0x4c,
	0xba, 0x3b, 0xad, 0xda, 0xa9, 0x78, 0xad, 0x5e, 0x6f, 0x47, 0x69, 0xd3, 0x2f, 0x77, 0x75, 0x07,
	0xf0, 0x54, 0x03, 0xf8, 0x23, 0x4f, 0x63, 0xab, 0x59, 0x90, 0x87, 0x00, 0x7a, 0x1a, 0x52, 0x77,
	0xc2, 0x0a, 0x33, 0xab, 0x28, 0x0d, 0x59, 0x81, 0x5e, 0x43, 0xaf, 0xa4, 0x8a, 0x98, 0x41, 0xc5,
	0xb3, 0x27, 0xdb, 0x32, 0xb4, 0x31, 0x35, 0x2e, 0x74, 0x06, 0x03, 0x56, 0xd7, 0x6b, 0x2a, 0xdd,
	0x5a, 0x4e, 0x4c, 0xa3, 0x44, 0x2a, 0x96, 0x33, 0x41, 0xb8, 0x4a, 0x9d, 0x1b, 0x9d, 0x43, 0x24,
	0x69, 0xce, 0x04, 0xa3, 0x5c, 0x99, 0x19, 0xfe, 0x25, 0xb6, 0x8d, 0xc0, 0x1c, 0x62, 0xcf, 0xa3,
	0x57, 0xc6, 0x49, 0x49, 0x0d, 0x43, 0xa2, 0xd4, 0xc8, 0x7b, 0x73, 0x0e, 0x0f, 0xcc, 0x59, 0x2f,
	0xb1, 0x66, 0x3f, 0x38, 0x51, 0x6b, 0x49, 0xdd, 0xea, 0x5b, 0x03, 0x26, 0x10, 0x6d, 0x5b, 0xd3,
	0xb4, 0x51, 0x4c, 0xad, 0x9a, 0xcf, 0x59, 0x05, 0x4d, 0x20, 0x2e, 0x68, 0x9d, 0x4b, 0x26, 0x14,
	0xab, 0xb8, 0x1b, 0x93, 0x6f, 0xda, 0xe5, 0x49, 0x77, 0x8f, 0x27, 0xf8, 0xbd, 0x5f, 0x2f, 0x7a,
	0xb5, 0x53, 0xbd, 0xfd, 0x90, 0xc7, 0x8a, 0x23, 0xe8, 0xd3, 0x52, 0xa8, 0x0d, 0xfe, 0x06, 0x71,
	0x26, 0xab, 0x25, 0x95, 0xf3, 0x4a, 0xa8, 0x1a, 0x8d, 0x61, 0x48, 0x79, 0x21, 0x2a, 0xc6, 0x95,
	0x4b, 0xda, 0xea, 0x7a, 0x48, 0xeb, 0x9a, 0x4a, 0x57, 0x99, 0x91, 0x75, 0xbc, 0x20, 0x75, 0x7d,
	0x57, 0xc9, 0xc2, 0x35, 0xbd, 0xd5, 0xf1, 0x39, 0x9c, 0x94, 0xb4, 0xcc, 0xa8, 0xac, 0x17, 0x4c,
	0x1c, 0x84, 0xc7, 0xef, 0xc0, 0xb1, 0xe6, 0x70, 0xe8, 0xaf, 0x00, 0x46, 0x9c, 0xaa, 0xbb, 0x4a,
	0x2e, 0x6d, 0xf0, 0x19, 0x0c, 0x6c, 0x17, 0xee, 0x8d, 0x9b, 0xd5, 0x7b, 0x7d, 0xa5, 0xce, 0x8d,
	0x2e, 0x01, 0xda, 0x9a, 0xdc, 0x52, 0x9f, 0x19, 0xfa, 0xee, 0x56, 0x9a, 0x7a, 0x61, 0x1a, 0xdd,
	0x56, 0xe6, 0x98, 0x7a, 0xe2, 0xf1, 0xdd, 0xa2, 0x5b, 0x05, 0xff, 0x84, 0x81, 0x4d, 0xfb, 0x5f,
	0xf2, 0x9c, 0x42, 0x2c, 0x24, 0xbb, 0x25, 0x8a, 0x9a, 0x78, 0xfd, 0x99, 0x51, 0x0a, 0xce, 0xa4,
	0x03, 0xde, 0xb8, 0xa7, 0xe2, 0xbd, 0x02, 0xfb, 0x25, 0xef, 0xb1, 0xe0, 0x4f, 0x10, 0x7b, 0x46,
	0x4d, 0x33, 0x5a, 0x12, 0xb6, 0x6a, 0x68, 0x66, 0x94, 0x2d, 0xd5, 0xc3, 0x96, 0xea, 0xf8, 0x0a,
	0xa2, 0x9c, 0xf0, 0x82, 0x15, 0x44, 0xd1, 0xc7, 0xa7, 0xcd, 0xae, 0x20, 0x2a, 0x58, 0x9d, 0x57,
	0xb7, 0x54, 0x6e, 0xd0, 0x14, 0x8e, 0xdc, 0x4a, 0x90, 0xb9, 0xb0, 0x86, 0x5e, 0x63, 0x73, 0x1a,
	0xfc, 0x55, 0xe1, 0xce, 0x2c, 0x6f, 0xc6, 0x89, 0xde, 0xc2, 0x28, 0xaf, 0xf8, 0x0d, 0x93, 0xe5,
	0xdc, 0x1c, 0x88, 0x61, 0x73, 0x02, 0xc6, 0x2d, 0x04, 0xee, 0xa0, 0x59, 0x1b, 0xc6, 0xab, 0x82,
	0xa2, 0xbd, 0x41, 0x8e, 0xfd, 0xfb, 0x63, 0xee, 0x12, 0xee, 0xcc, 0x1e, 0x02, 0x7f, 0xd3, 0xe8,
	0x23, 0x1c, 0x37, 0x10, 0x6e, 0x43, 0xf6, 0xdc, 0x34, 0x5d, 0x8f, 0xf7, 0x30, 0x71, 0x07, 0x7d,
	0x80, 0xd1, 0x0d, 0x55, 0xf9, 0xa2, 0x49, 0xd8, 0xff, 0x2a, 0xb4, 0x4b, 0xc0, 0x1d, 0x84, 0xed,
	0xf3, 0xff, 0x57, 0x1f, 0xd9, 0xc0, 0xfc, 0xd2, 0x2e, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe0,
	0xc0, 0xe9, 0x92, 0xde, 0x06, 0x00, 0x00,
}
