syntax = "proto3";

package pb;

service discovery {
    rpc network (empty) returns (network_opts) {}
}

service master {
  rpc confirm_cert (cert) returns (empty) {}
  rpc confirm_node (public_key) returns (master_chain) {}
}

service membership {
  rpc confirm_member (candidate) returns (public_key) {}
  rpc fetch_member (public_key) returns (member) {}
  rpc sign_cert (cert) returns (empty) {}
}

message cert_block {
  block block = 1;
}

message master_block {
  block block = 1;
  cert_chain cert_chain = 4;
}

message block {
  string _key = 1;
  int64 index = 2;
  string hash = 3;
  string prev_hash = 4;
  int64 timestamp = 5;
  string tx = 6;
  public_key public_key = 7;
}

message cert_chain {
  repeated cert_block cert_chain = 1;
}

message master_chain {
  repeated master_block master_chain = 1;
}

message cert {
  string _key = 1;
  string id = 2;
  cert_meta meta = 3;
  participant issuer = 4;
  participant recipient = 5;
}

message participant {
  string name = 1;
  public_key public_key = 2;
  string signature = 3;
}

message cert_meta {
  string title = 1;
  string description = 2;
  int64 timestamp = 3;
}

message public_key {
  string public_key = 1;
}

message empty {}

message broker_opts {
  string endpoint = 1;
  string user = 2;
  string password = 3;
}

message membership_opts {
  string endpoint = 1;
}

message master_opts {
  string endpoint = 1;
}

message network_opts {
  broker_opts broker = 1;
  membership_opts membership = 2;
  master_opts master = 3;
}

message member {
  string _key = 1 ;
  public_key public_key = 2;
  bytes private_key = 3;
  member_meta meta = 4;
}

message member_meta {
  string email = 1;
  string name = 2;
}

message candidate {
  string email = 1;
  string name = 2;
}
